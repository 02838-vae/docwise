Python 3.13.7 (tags/v3.13.7:bcee1c3, Aug 14 2025, 14:15:11) [MSC v.1944 64 bit (AMD64)] on win32
Enter "help" below or click "Help" above for more information.
>>> import streamlit as st
... from docx import Document
... from docx.enum.text import WD_COLOR_INDEX
... 
... # =========================
... # H√†m ƒë·ªçc d·ªØ li·ªáu t·ª´ file Word
... # =========================
... def load_questions(file_path):
...     doc = Document(file_path)
...     questions = []
...     current_q = None
... 
...     for para in doc.paragraphs:
...         text = para.text.strip()
...         if not text:
...             continue
... 
...         # N·∫øu l√† c√¢u h·ªèi
...         if text.lower().startswith("choose") or text.endswith("?"):
...             if current_q:
...                 questions.append(current_q)
...             current_q = {"question": text, "options": []}
... 
...         # N·∫øu l√† ƒë√°p √°n
...         elif current_q:
...             # Ki·ªÉm tra highlight v√†ng
...             is_correct = any(
...                 run.font.highlight_color == WD_COLOR_INDEX.YELLOW
...                 for run in para.runs
...             )
...             current_q["options"].append({"text": text, "correct": is_correct})
... 
...     if current_q:
...         questions.append(current_q)
... 
...     return questions
... 

# =========================
# App Streamlit
# =========================
def main():
    st.title("üìò B√†i ki·ªÉm tra tr·∫Øc nghi·ªám ti·∫øng Anh k·ªπ thu·∫≠t")

    # T·∫£i c√¢u h·ªèi
    questions = load_questions("docwise.docx")

    st.write(f"Ng√¢n h√†ng c√≥ {len(questions)} c√¢u h·ªèi.")

    # Bi·∫øn l∆∞u ƒë√°p √°n ng∆∞·ªùi d√πng
    answers = {}

    # Hi·ªÉn th·ªã c√¢u h·ªèi
    for i, q in enumerate(questions):
        st.subheader(f"C√¢u {i+1}: {q['question']}")
        options = [opt["text"] for opt in q["options"]]
        answers[i] = st.radio("Ch·ªçn ƒë√°p √°n:", options, index=None, key=f"q{i}")

    # N√∫t n·ªôp b√†i
    if st.button("‚úÖ N·ªôp b√†i"):
        score = 0
        results = []

        for i, q in enumerate(questions):
            correct_ans = next(opt["text"] for opt in q["options"] if opt["correct"])
            user_ans = answers[i]

            if user_ans == correct_ans:
                score += 1
                results.append((i + 1, True, user_ans, correct_ans))
            else:
                results.append((i + 1, False, user_ans, correct_ans))

        # Hi·ªÉn th·ªã k·∫øt qu·∫£ t·ªïng
        st.success(f"üéØ K·∫øt qu·∫£: {score}/{len(questions)} c√¢u ƒë√∫ng")

        # Hi·ªÉn th·ªã chi ti·∫øt
        st.subheader("üìã Chi ti·∫øt k·∫øt qu·∫£:")
        for q_num, is_correct, user_ans, correct_ans in results:
            if is_correct:
                st.write(f"‚úÖ C√¢u {q_num}: ƒê√∫ng ({user_ans})")
            else:
                st.write(f"‚ùå C√¢u {q_num}: Sai. B·∫°n ch·ªçn: {user_ans}. ƒê√°p √°n ƒë√∫ng: {correct_ans}")


if __name__ == "__main__":
    main()
